// Generated by CoffeeScript 2.1.0
(function() {
  var Page, ReviewMobilePage, S,
    boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } };

  Page = require('./Page');

  S = require('string');

  module.exports = ReviewMobilePage = class ReviewMobilePage extends Page {
    constructor({productId, reviewId}) {
      super({
        url: `http://www.amazon.com/gp/aw/review/${productId}/${reviewId}`
      });
      this.parse = this.parse.bind(this);
      this.productId = productId;
      this.reviewId = reviewId;
    }

    parse() {
      var dateText, descSelector, descTag, ref, starString;
      boundMethodCheck(this, ReviewMobilePage);
      descSelector = ".review-text";
      starString = (ref = this.$('.review-rating').attr('class')) != null ? ref.replace(/.*a-star\D*(\d*).*/g, '$1') : void 0;
      dateText = this.$('.review-date').text().match(/[a-zA-Z]+ \d+, \d{4}/)[0];
      // replace all br tags to new lines.
      descTag = this.$(descSelector).find('br').replaceWith('\n');
      return {
        id: this.reviewId,
        productId: this.productId,
        title: S(this.$('.review-title').text()).trim().s,
        starCount: S(starString).toInt(),
        createdAt: new Date(dateText),
        descText: S(this.$(descSelector).text()).trim().s,
        helpfulCount: S(this.$('.cr-vote-text').text()).toInt() || 0
      };
    }

  };

  // voteCount: S(@$('.votes-total').text()).toInt() or 0

}).call(this);
